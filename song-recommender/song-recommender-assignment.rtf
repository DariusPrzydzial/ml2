{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Medium;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red30\green87\blue232;
\red51\green51\blue51;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\margl1440\margr1440\vieww15040\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl800\sa280

\f0\fs68 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Recommending songs\
\pard\pardeftab720\sl400\sa280

\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
In this module, we focused on building recommender systems to find products, music and movies that interest users. We also built an exciting iPython notebook for recommending songs, which compared the simple popularity-based recommendation with a personalized model, and showed the significant improvement provided by personalization.\
In this assignment, we are going to explore the song data and the recommendations made by our model. In the process, you are going to learn how to use one of the most important data manipulation primitives,
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 groupby
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 . These techniques will be important to building the intelligent application in your capstone project.\
Follow the rest of the instructions on this page to complete your program. When you are done, 
\i\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 instead of uploading your code, you will answer a series of quiz questions
\i0\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  (see the quiz after this reading) to document your completion of this assignment. The instructions will indicate what data to collect for answering the quiz.\
\pard\pardeftab720\sl480\sa280

\f1\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Learning outcomes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa280
\ls1\ilvl0
\f0\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Execute song recommendation code with the iPython notebook\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Load and transform real, song data\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build a song recommender model\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 USe the model to recommend songs to individual users\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use groupby to compute aggregate statistics of the data\cb1 \
\pard\pardeftab720\sl400\sa280
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl480\sa280

\b\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Resources you will need
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You will need to install the software tools or use the free Amazon EC2 machine. Instructions for both options are provided in the reading for Module 1.\
\
\pard\pardeftab720\sl480\sa280

\f1\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Download the data and starter code\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Before getting started, you will need to download the dataset and the starter iPython notebook that we used in the module.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa280
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Download the wikipedia dataset with articles on famous people here in SFrame format: {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/IfIfKL0JuRu4Qu9F3sSdt35LjHMzeoqoEMyi6t2gfFXtU3haE8yanJet4rwEJkdX36OzBkWdEmSj4-p0sgTbfg.bzvhkv1cz0z4zFcKXK1rxg.-sP_ZrakAi1OtcZjoUpYRV9PERP5H0EWuLx0tsUMPRNQMruk6z7Kk0P07DwYluKMmKA-yAACNDIYhqaL0lPFXvCk2yqsb09zDNsqGyQ-1oXIfQh9hY1GwoBaCSTpdGINfKB4JIAlFSarAVf_rTcLiI85g4wymY4YFXq_BH5JYDSmqs9g_3Q5EifYMYs1whujneKh6hQZZ2KesRBDLVmiLtetBj5ABN6_eIdRYcN5h8_CNZiOVLLfsmk1diD5PiqmLUwCQ8Fqf5djhTQOzPuSHqUQcaGLbV6cVQZ4-26RBlHlNjGbDvXzKQdWhHrMgJQN7FvyhWi6_kHdqZ8kNwTx0w7YBFIKgt6P_s3dWFMLD8-Vn07HMKynvdorZkwrKw6b-YqfgSrsnLOcy717N4TKqPL5udFUBsjS7vez8izcw0cVW36ywFQnBv3O_riTGL1W"}}{\fldrslt 
\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 song_data.gl.zip}}\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Download the document retrieval notebook from the module here: {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/Kkkwszr2DfSecqr3YsMlpSJPmuUizAsOdIWwn90HFqDQzVioM8CKTTXS7-cBy69NpD3Ov7F3H-hC9chACAuEfw.DgsYppko6enkw4dAJVjupw.kiAze5eZZcoqozn2pWGSmGk5YufrVI5Uq4ym7O-zXZpKMw-2U-wrQf4gimG89d418zr7rlrkFQIE4Zxn5J8RmEnJ4ylzY-sIXOwkMKOToBAATYdheMVPgtCDAJZKIOTw_ZAgKf15tZBofX_MTOdTkA1ArUcvcqJFOR-i2aifyXMIZwhnkkg3vBUBcjYJPPbETIuFUF5afq2JCYQFsVkDxnUI3ZFl9p_U8TQWE51hSyZ5S1ZjxCRh26zREwHs0qyySda05EajYXpwvfEVgSmjiMdAbD41UZ2QzuqNMfTkuMbUhjYdptYLSvS2xz2dvQjYigui0exJaO7sxUzWtqbi_2ZcUNlLYXj-WPVLpEacyjXq7CU2HcfFB2UAB6maTOMuwA6uEFZFhC5MECuRRNgZ1q24buKUQkhaGFwefoqv5RSI35jeiKUXgjk6aaTaltw9LLBVjAt6oBSG9nb_OBlPuw"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Song recommender.ipynb}}\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Save both of these files in the same directory (where you are calling iPython notebook from) and unzip the data file.\cb1 \
\pard\pardeftab720\sl400\sa280
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Now you are ready to get started!\
\
\pard\pardeftab720\sl480\sa280

\i\b\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Note: If you would rather use other ML tools...
\f1\i0\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You are welcome to use any ML tool for this course, such as {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/2Y7tBRNZ-XZIE_flmf2D22y0TP7bQGy2XSfWrAHIa5FP_Nvjpad5MEK22S6illPLB4kKqpl4cABi31NsQxb1RA.J96O6P0OD6E5rMseU4kiag.unh04Let0NrckdHXKLCOIGZ2nUGbgauMUwOzhcaTzTcFvFpmFTj4vLHUZUNspFUCg6Peo6Hihe-vqB--gPMq664Djj0827guZhe1XGWHGgX4pNnYKvCPpIn7MDoo-_jK3d9KAk2nGdyAKBPJ4cegwsER-fpeP9j0Pw67VhONV0G7pKH-BcaOqUCShIAivHmickJsYxbzybnZx18Ts60o7XbC8Y-Dos-lWOphBcNmUNsoy3k8sW6CBfbunvuvXL5QkUiiZfmbR5WOPEyCe5t1YGsnqxV-rXk5C1qrPdA39Gk"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 scikit-learn}}. Though, as discussed in the intro module,
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0  we strongly recommend you use IPython Notebook and GraphLab Create. (GraphLab Create is free for academic purposes.)
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
If you are choosing to use other packages, we still recommend you use SFrame, which will allow you to scale to much larger datasets than Pandas. (Though, it's possible to use Pandas in this course, if your machine has sufficient memory.) The SFrame package is available in {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/s9ZenAUOnAyLhOm0psSjkFPD_PaP7j9guqOg2Hzw8XKo68JOCqcZUSxfvNHrHNnK6hHNe5yoLAsndi0N6EdWkQ.ykD3a4UxmN0Nl6NCXUN-9A.1-r84LZ9ZvCUFfPPcb-byO6jua5JylGxe5NCFKZiH3EJPf4kituI2FwrdAq-7hnJqkg2DJV81voPrqKRxC9ThO2eZEQokiW8pIErRzvBlOmxc6E8TFOa82yPXPv6gqI9XLj05GMVm0n8Jw6tDwRHi4RRkOg1H8s1i9KDEoXya9cJuVGReK-uhL6OjyGgkxas7Tr_40yDm0rzDetZ3fYfK6F81eL9Nzd9oupMX3CkayFAvb-e3fxhAHwMuvrmyuNm3hlEjdcpgndPoebu_JcGGIKitsZjE5LklpEsKFFHUvE"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 open-source under a permissive BSD license}}. So, you will always be able to use SFrames for free.\
If you are not using SFrame, here is the dataset for this assignment in CSV format, so you can use {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/unwiYVVbg7qnXtYJqvXI2wDy1-hfdn2-3WK-Ld7i7d6g9jKchLDgAuWRKRylruNHMHegaF_FfF99264Iw_7_Qg.YChQWRkQfr0DQNTgjOZwpw.yWRCiycA6p1HCj0vzaX8mxxdAFmgUQoALSlQdNjotyLSoWOnmzWHCjcZBf8ryYJ7bdw6qt9LpW5uzFIw_ig9ryIJh_4r2vocTrfs0lbbEQJPDqBsS8dQF12eL9wQfyld1N1CShYQdJ6I4Urg_5D5dwFvQKClMv5oVDcO2m9pjDl3ecqrHmsatjLjnJohaff2rBYlqt7iSHFXT3lHLf7nlOJlmc4vLoVceoO0JScmx2zqqnn3IB6U3lZL6TedDcN0ap6TRLBBfRkUrsp6NjoK_g"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Pandas}} or other options out there: {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/E88yvcTAksimoDvmcKY1c471mzUPW6pb9t_IOTwHKLm73mEvuCOUdoZ-_PwP82e7Usk6kfJJxWjPLZmOyOg9Kg.SN93fnGHbAVPV00lOs6VmQ.ZiSjdswyRb7Q8Yq_k96nBW4p-N0KHBYaYzNbs6L9rE1jzQQwW2JzvMnMz9DQ620NZFY9q4RRK31cuKuVTAzB5JfV5Cu8WgE2BG99Vej5aHokX2V0_UZOHux8TUtC7MKZxo_l7X12Ih_ioXnJs9LHPuwDvMXHQORcQt7z9f9tol5K_FEUOhcwGLlyb-Rem7yWhU5yWXu9m_DrslCZvi1Dmm4FptdOmrv6d2jI2IKWL3NKh0LYsOKOycQPTWMuJtCZOu537k3q6wdzGgdKPoKZtfdb1BDsj-nMcTPOrDHPFvMcwcICnJprCpcSSoGs3i3F7CHw4R9qlIkxQSNtepS9eke-eD1nUYO7gtN2dcjW30HOlLyY8glXcvbI_s1IxDtl"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 song_data.csv}}\
\
\pard\pardeftab720\sl480\sa280

\f1\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Watch the video and explore the iPython notebook on recommending songs\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If you haven\'92t done so yet, before you start, we recommend you watch the video where we go over the iPython notebook on song recommendation from this module. You can then open up the iPython notebook we used and familiarize yourself with the steps we covered in this example.\
\pard\pardeftab720\sl480\sa280

\f1\fs40 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 What you will do\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Now you are ready! We are going do three tasks in this assignment. There are several results you need to gather along the way to enter into the quiz after this reading.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa280
\ls3\ilvl0
\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Counting unique users: 
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The method 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .unique()
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  can be used to select the unique elements in a column of data. In this question, you will compute the number of unique users who have listened to songs by various artists. For example, to find out the number of unique users who listened to songs by 'Kanye West', all you need to do is select the rows of the song data where the artist is 'Kanye West', and then count the number of unique entries in the \'91user_id\'92 column. Compute the number of unique users for each of these artists: 'Kanye West', 'Foo Fighters', 'Taylor Swift' and 'Lady GaGa'. 
\i\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Save these results to answer the quiz at the end.
\i0\b0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls3\ilvl0
\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Using groupby-aggregate to find the most popular and least popular artist:
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  each row of 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 song_data
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 contains the number of times a user listened to particular song by a particular artist. If we would like to know how many times any song by 'Kanye West' was listened to, we need to select all the rows where \'91artist\'92=='Kanye West' and sum the \'91listen_count\'92 column. If we would like to find the most popular artist, we would need to follow this procedure for each artist, which would be very slow. Instead, you will learn about a very important method:\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 .groupby()\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can read the {\field{\*\fldinst{HYPERLINK "https://eventing.coursera.org/api/redirectStrict/uis7ocrGLflEUzvZM7oUcOIlM8Y4XUmdqioRizFa_sBeW66BncHNurGQjiRwtjc6Dkkj_m1sV1V-bRfq6JzCgQ.Q0vUJcB8-R_3wdzJQRiJYA.lTi7JYJ6rIknhUjNRJ2BrzvHpQGhMTpiI_oQLvIjhu5BFsiXv7ZRYBezFLX7hA_6QhkZ6RmQ3Yfd8b7OGaFhPDAUU4Rjgwp3vAmv6GgLZfGFCF3gUVrW2FlNM9CliQcGdzABEZZMeoZV2JDi6BbdoZyFXuUtUy6E-Urv3dvJStPZeqBWsOGKm5qA8z12NaJ0XTfbX9f1ehcRxQ9yz7UQ3cyNkXL6RP09NRVUN4OK9qENCRUJnWv_FcH-4l-MUe2LAw7HqNOY04M8KWFXtoAARZGXcHSVIIkK06tfnmdb74zIlXOIfLrMZ0f2rVSPqOP6foqz5-YkLGB8AMyoWAedUyoHxAPzpWGDOrX4aiZlU_kQgioigPdXgUayuo7oL7Hwbkl2pPk1Wb40aAp4a0E7QREvDmcy8SI40erzyreg930Jc3tDq611lizugBx0G0treY79pVuuNhg5kmCeEATL7kq-PihmAduesA5aj-SpOPE"}}{\fldrslt \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 documentation about groupby here}}. The 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .groupby
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  method computes an aggregate (in our case, the sum of the \'91listen_count\'92) for each distinct value in a column (in our case, the \'91artist\'92 column).\
Follow these steps to find the most popular artist in the dataset:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .groupby
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  method has two important parameters:\cb1 \
\pard\pardeftab720\sl400\sa280
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 i. 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 key_columns
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , which takes the column we want to group, in our case, \'91artist\'92\
ii. 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 operations
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , where we define the aggregation operation we using, in our case, we want to sum over the \'91listen_count\'92.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 With this in mind, the following command will compute the sum
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0  listen_count
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  for each artist and return an SFrame with the results:\cb1 \
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 song_data.groupby(key_columns='artist', operations=\{'total_count': graphlab.aggregate.SUM('listen_count')\})\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 the total number of listens for each artist will be stored in 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'91total_count\'92
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Sort the resulting SFrame according to the 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'91total_count\'92
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , and find the artist with the most popular and least popular artist in the dataset. 
\i\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Save these results to answer the quiz at the end.
\i0\b0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400\sa280
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 3. 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Using groupby-aggregate to find the most recommended songs:
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  Now that we learned how to use
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .groupby() 
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 to compute aggregates for each value in a column, let\'92s use to find the song that is most recommended by the 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 personalized_model 
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 model we learned in the iPython notebook above. Follow these steps to find the most recommended song:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa280
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Split the data into 80% training, 20% testing, using 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 seed=0
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , as was done in the iPython notebook above.\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Train an
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0  item_similarity_recommender
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , as done in the iPython notebook, using the training data.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls7\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Next, we are going to make recommendations for the users in the test data, but there are over 200,000 unique users in the test set. Computing recommendations for these many users can be slow in some computers. Thus, we will use only the first 10,000 users only in this question. Using this command to select this subset of users:\cb1 \
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 subset_test_users = test_data['user_id'].unique()[0:10000]\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls8\ilvl0
\f0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Let\'92s compute one recommended song for each of these test users. Use this command to compute these recommendations:\cb1 \
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 personalized_model.recommend(subset_test_users,k=1)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls9\ilvl0
\f0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Finally, we can use 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .groupby() 
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 to find the most recommended song! :) When we used 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .groupby() 
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in the previous question, we summed up the total 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'91listen_count\'92
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  for each artist, by setting the parameter SUM in the aggregator:\cb1 \
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 operations=\{'total_count': graphlab.aggregate.SUM('listen_count')\})\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For this question, we simply want to count how often each song is recommended, so we will use the COUNT aggregator instead of SUM, and store the results in a column we will call \'91count\'92 by using:\
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 operations=\{'count': graphlab.aggregate.COUNT()\})\
\pard\pardeftab720\sl400\sa280

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 And, since we want to use the song titles as the key to the aggregator instead of of the \'91artist\'92, we use:\
\pard\pardeftab720\sl360

\f2\fs26 \cf3 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 key_columns='song'\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls10\ilvl0
\f0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 By sorting the results, you will find out the most recommended song to the first 10,000 users in the test data! 
\i\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Save these results to answer the quiz at the end.
\i0\b0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
}